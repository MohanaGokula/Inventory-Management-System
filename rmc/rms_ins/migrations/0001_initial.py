# Generated by Django 5.0.2 on 2024-02-22 04:37

import datetime
import django.db.models.deletion
import rms_ins.models
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='custom_permissions',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'permissions': (('is_rmc_admin', 'is rmc admin'), ('view_admin_reports', 'can view admin reports'), ('is_marketting', 'is marketting'), ('view_marketting_reports', 'can view marketting reports'), ('is_qty_ctrl', 'is quality ctrl'), ('view_qty_ctrl_reports', 'can view quality ctrl reports'), ('is_planning', 'is planning'), ('view_planning_reports', 'can view planning reports'), ('is_dispatch', 'is dispatch'), ('view_dispatch_reports', 'can view dispatch reports'), ('is_purchase', 'is purchase'), ('view_purchase_reports', 'can view purchase reports'), ('is_accounts', 'is accounts'), ('view_accounts_reports', 'can view accounts reports'), ('is_store', 'is store'), ('view_store_reports', 'can view store reports'), ('is_gate', 'is gate'), ('view_gate_reports', 'can view gate reports'), ('is_transport', 'is transport'), ('view_transport_reports', 'can view transport reports'), ('is_utility', 'is utility'), ('view_utility_reports', 'can view utility reports'), ('add_pump_clearance', 'can add pump clearance'), ('view_pump_clearance', 'can view pump clearance'), ('edit_pump_clearance', 'can edit pump clearance'), ('delete_pump_clearance', 'can delete pump clearance'), ('add_quotation', 'can add quotation'), ('view_quotation', 'can view quotation'), ('edit_quotation', 'can edit quotation'), ('delete_quotation', 'can delete quotation'), ('add_purchase_order', 'can add purchase order'), ('view_purchase_order', 'can view purchase order'), ('edit_purchase_order', 'can edit purchase order'), ('delete_purchase_order', 'can delete purchase order'), ('add_purchase_invoice', 'can add purchase invoice'), ('view_purchase_invoice', 'can view purchase invoice'), ('edit_purchase_invoice', 'can edit purchase invoice'), ('delete_purchase_invoice', 'can delete purchase invoice'), ('add_sales_invoice', 'can add sales invoice'), ('view_sales_invoice', 'can view sales invoice'), ('edit_sales_invoice', 'can edit sales invoice'), ('delete_sales_invoice', 'can delete sales invoice'), ('add_grouping', 'can add accounts grouping'), ('view_grouping', 'can view  accounts grouping'), ('edit_grouping', 'can edit  accounts grouping'), ('delete_grouping', 'can delete accounts grouping'), ('add_ledger', 'can add ledger'), ('view_ledger', 'can view ledger'), ('edit_ledger', 'can edit ledger'), ('delete_ledger', 'can delete ledger'), ('approve_po', 'can approve po'), ('approve_so', 'can approve so')),
                'managed': False,
                'default_permissions': (),
            },
        ),
        migrations.CreateModel(
            name='soft_delete_model',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('created_by', models.CharField(blank=True, max_length=100, null=True)),
                ('created_dtm', models.DateTimeField(auto_now_add=True, null=True)),
                ('modified_by', models.CharField(blank=True, max_length=100, null=True)),
                ('modified_dtm', models.DateTimeField(auto_now=True, null=True)),
                ('remarks', models.TextField(blank=True, max_length=1000, null=True)),
                ('dev_remarks', models.TextField(blank=True, max_length=1000, null=True)),
                ('system_field', models.IntegerField(default=0)),
                ('deleted', models.IntegerField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='taxform_master',
            fields=[
                ('soft_delete_model_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='rms_ins.soft_delete_model')),
                ('name', models.CharField(max_length=255)),
                ('tax_value1', models.FloatField(default=0)),
                ('tax_value2', models.FloatField(default=0)),
                ('tax_type', models.CharField(max_length=10)),
                ('valid_from', models.DateField()),
                ('valid_upto', models.DateField()),
                ('user_remarks', models.TextField(blank=True, max_length=1000, null=True)),
                ('status', models.IntegerField(default=1)),
            ],
            bases=('rms_ins.soft_delete_model',),
        ),
        migrations.CreateModel(
            name='uom_master',
            fields=[
                ('soft_delete_model_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='rms_ins.soft_delete_model')),
                ('name', models.CharField(max_length=100)),
                ('symbol', models.CharField(max_length=100)),
                ('quantity', models.FloatField(default=0)),
                ('decimal_place', models.IntegerField(default=0)),
                ('user_remarks', models.TextField(blank=True, max_length=1000, null=True)),
                ('status', models.IntegerField(default=1)),
            ],
            bases=('rms_ins.soft_delete_model',),
        ),
        migrations.CreateModel(
            name='entity_master',
            fields=[
                ('soft_delete_model_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='rms_ins.soft_delete_model')),
                ('entity_type', models.CharField(blank=True, max_length=100, null=True)),
                ('entity_name', models.CharField(max_length=100)),
                ('address_1', models.CharField(blank=True, max_length=100, null=True)),
                ('address_2', models.CharField(blank=True, max_length=100, null=True)),
                ('address_3', models.CharField(blank=True, max_length=100, null=True)),
                ('location', models.CharField(blank=True, max_length=100, null=True)),
                ('pincode', models.CharField(blank=True, max_length=6, null=True)),
                ('state', models.CharField(blank=True, max_length=100, null=True)),
                ('phone_number', models.CharField(blank=True, max_length=255, null=True)),
                ('email_id', models.EmailField(blank=True, max_length=100, null=True)),
                ('pan_no', models.CharField(blank=True, max_length=50, null=True)),
                ('gst_no', models.CharField(blank=True, max_length=50, null=True)),
                ('user_remarks', models.TextField(blank=True, max_length=1000, null=True)),
                ('status', models.IntegerField(default=1)),
                ('mobile_number', models.CharField(blank=True, max_length=255, null=True)),
                ('contact_person', models.CharField(blank=True, max_length=100, null=True)),
                ('contact_mobile_no', models.CharField(blank=True, max_length=100, null=True)),
                ('contact_email_id', models.EmailField(blank=True, max_length=100, null=True)),
                ('contact_designation', models.CharField(blank=True, max_length=100, null=True)),
                ('gst_type', models.CharField(blank=True, max_length=50, null=True)),
                ('gst_file', models.FileField(null=True, upload_to=rms_ins.models.user_directory_path, verbose_name='')),
                ('parent_id', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='rms_ins.entity_master')),
            ],
            bases=('rms_ins.soft_delete_model',),
        ),
        migrations.CreateModel(
            name='entity_company_detail',
            fields=[
                ('soft_delete_model_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='rms_ins.soft_delete_model')),
                ('alias', models.CharField(max_length=255)),
                ('web', models.CharField(blank=True, max_length=100, null=True)),
                ('seal', models.ImageField(blank=True, null=True, upload_to=rms_ins.models.user_directory_path)),
                ('logo', models.ImageField(blank=True, null=True, upload_to=rms_ins.models.user_directory_path)),
                ('commencement_dt', models.DateField()),
                ('cst_no', models.CharField(blank=True, max_length=100, null=True)),
                ('lut_no', models.CharField(blank=True, max_length=100, null=True)),
                ('tan_no', models.CharField(blank=True, max_length=100, null=True)),
                ('cin_no', models.CharField(blank=True, max_length=100, null=True)),
                ('opening_dt', models.DateField()),
                ('closing_dt', models.DateField()),
                ('pf_no', models.CharField(blank=True, max_length=100, null=True)),
                ('esi_no', models.CharField(blank=True, max_length=100, null=True)),
                ('is_batching_report_needed', models.IntegerField(default=0)),
                ('entity_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='rms_ins.entity_master')),
            ],
            bases=('rms_ins.soft_delete_model',),
        ),
        migrations.CreateModel(
            name='approval_setting_master',
            fields=[
                ('soft_delete_model_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='rms_ins.soft_delete_model')),
                ('voucher_type', models.CharField(max_length=100)),
                ('is_appr_needed', models.IntegerField(default=0)),
                ('is_so_wait_on_save', models.IntegerField(default=0)),
                ('conditions_for_so_waiting', models.CharField(blank=True, max_length=255, null=True)),
                ('is_mail_needed', models.IntegerField(default=0)),
                ('mail_ids', models.CharField(blank=True, max_length=255, null=True)),
                ('entity_company_id', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='rms_ins.entity_master')),
            ],
            bases=('rms_ins.soft_delete_model',),
        ),
        migrations.CreateModel(
            name='entity_order_master',
            fields=[
                ('soft_delete_model_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='rms_ins.soft_delete_model')),
                ('order_no', models.CharField(max_length=200)),
                ('order_date', models.DateField()),
                ('transport_mode', models.CharField(max_length=50)),
                ('order_amount', models.FloatField(default=0)),
                ('pay_terms', models.IntegerField(default=0)),
                ('prefix', models.CharField(max_length=100)),
                ('is_tax_included', models.IntegerField(default=0)),
                ('validity_date', models.DateField()),
                ('freight_charges', models.FloatField(default=0)),
                ('terms_condition', models.TextField(blank=True, max_length=1000, null=True)),
                ('status', models.IntegerField(default=1)),
                ('is_approved', models.IntegerField(default=0)),
                ('user_remarks', models.TextField(blank=True, max_length=1000, null=True)),
                ('order_time', models.TimeField()),
                ('is_advance_payment', models.IntegerField(default=0)),
                ('entity_company_id', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='company_id', to='rms_ins.entity_master')),
                ('entity_consignee_id', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='entity_consignee_id', to='rms_ins.entity_master')),
                ('entity_contact_id', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, related_name='contact_id', to='rms_ins.entity_master')),
                ('entity_id', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='rms_ins.entity_master')),
            ],
            bases=('rms_ins.soft_delete_model',),
        ),
        migrations.CreateModel(
            name='entity_plant_detail',
            fields=[
                ('soft_delete_model_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='rms_ins.soft_delete_model')),
                ('plant_alias', models.CharField(max_length=255)),
                ('plant_web', models.CharField(blank=True, max_length=100, null=True)),
                ('plant_commence_dt', models.DateField()),
                ('plant_cst_no', models.CharField(blank=True, max_length=100, null=True)),
                ('plant_lut_no', models.CharField(blank=True, max_length=100, null=True)),
                ('plant_tan_no', models.CharField(blank=True, max_length=100, null=True)),
                ('plant_cin_no', models.CharField(blank=True, max_length=100, null=True)),
                ('account_opening_dt', models.DateField()),
                ('account_closing_dt', models.DateField()),
                ('plant_mixer_capacity', models.FloatField(default=0)),
                ('plant_pfno', models.CharField(blank=True, max_length=100, null=True)),
                ('plant_esino', models.CharField(blank=True, max_length=100, null=True)),
                ('plant_serial_no', models.CharField(max_length=100)),
                ('plant_model', models.CharField(blank=True, max_length=100, null=True)),
                ('plant_make', models.CharField(blank=True, max_length=100, null=True)),
                ('plant_seal', models.ImageField(blank=True, null=True, upload_to=rms_ins.models.user_directory_path)),
                ('plant_logo', models.ImageField(blank=True, null=True, upload_to=rms_ins.models.user_directory_path)),
                ('plant_br_logo', models.ImageField(blank=True, null=True, upload_to=rms_ins.models.user_directory_path)),
                ('entity_company_id', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='rms_ins.entity_master')),
                ('entity_id', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, related_name='plant_entity_id', to='rms_ins.entity_master')),
            ],
            bases=('rms_ins.soft_delete_model',),
        ),
        migrations.CreateModel(
            name='entity_vendor_detail',
            fields=[
                ('soft_delete_model_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='rms_ins.soft_delete_model')),
                ('ven_bank_name', models.CharField(blank=True, max_length=100, null=True)),
                ('ven_bank_branch', models.CharField(blank=True, max_length=100, null=True)),
                ('ven_bank_acc_no', models.CharField(blank=True, max_length=100, null=True)),
                ('ven_bank_ifsc', models.CharField(blank=True, max_length=100, null=True)),
                ('entity_id', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, related_name='vendor_entity_master_id', to='rms_ins.entity_master')),
                ('vendor_type', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='vendor_type', to='rms_ins.entity_master')),
            ],
            bases=('rms_ins.soft_delete_model',),
        ),
        migrations.CreateModel(
            name='numberings_master',
            fields=[
                ('soft_delete_model_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='rms_ins.soft_delete_model')),
                ('voucher_type', models.CharField(max_length=100)),
                ('is_active', models.IntegerField(default=0)),
                ('entity_plant_id', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='rms_ins.entity_master')),
            ],
            bases=('rms_ins.soft_delete_model',),
        ),
        migrations.CreateModel(
            name='numberings_detail',
            fields=[
                ('soft_delete_model_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='rms_ins.soft_delete_model')),
                ('starting_number', models.IntegerField(default=0)),
                ('number_of_digits', models.IntegerField(default=0)),
                ('prefix', models.CharField(blank=True, max_length=100, null=True)),
                ('valid_from_date', models.DateField()),
                ('valid_upto_date', models.DateField()),
                ('user_remarks', models.TextField(blank=True, max_length=1000, null=True)),
                ('numsetting_master', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='rms_ins.numberings_master')),
            ],
            bases=('rms_ins.soft_delete_model',),
        ),
        migrations.CreateModel(
            name='product_master',
            fields=[
                ('soft_delete_model_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='rms_ins.soft_delete_model')),
                ('name', models.CharField(max_length=100)),
                ('quantity', models.FloatField(default=1)),
                ('vendor_part_code', models.CharField(blank=True, max_length=25, null=True)),
                ('is_gst_applicable', models.IntegerField(default=0)),
                ('hsn_sac_code', models.CharField(blank=True, max_length=100, null=True)),
                ('hsn_sac_description', models.CharField(blank=True, max_length=100, null=True)),
                ('prod_gst_type', models.CharField(blank=True, max_length=50, null=True)),
                ('user_remarks', models.TextField(blank=True, max_length=1000, null=True)),
                ('is_batch_report_connected', models.IntegerField(default=0)),
                ('status', models.IntegerField(default=1)),
                ('category_detail', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='rms_ins.entity_master')),
                ('tax', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='rms_ins.taxform_master')),
                ('unit', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='rms_ins.uom_master')),
            ],
            bases=('rms_ins.soft_delete_model',),
        ),
        migrations.CreateModel(
            name='entity_order_detail',
            fields=[
                ('soft_delete_model_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='rms_ins.soft_delete_model')),
                ('sl_no', models.IntegerField(default=0)),
                ('quantity', models.FloatField(default=0)),
                ('rate', models.FloatField(default=0)),
                ('amount', models.FloatField(default=0)),
                ('delivery_mode', models.CharField(max_length=15)),
                ('tax_rate', models.FloatField(default=0)),
                ('status', models.IntegerField(default=1)),
                ('user_remarks', models.TextField(blank=True, max_length=1000, null=True)),
                ('is_approved', models.IntegerField(default=0)),
                ('balance_qty', models.FloatField(default=0)),
                ('scheduled_qty', models.FloatField(default=0)),
                ('accepted_qty', models.FloatField(default=0)),
                ('delivered_qty', models.FloatField(default=0)),
                ('concrete_structure', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='rms_ins.entity_master')),
                ('entity_order_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='rms_ins.entity_order_master')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='rms_ins.product_master')),
                ('tax', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='rms_ins.taxform_master')),
            ],
            bases=('rms_ins.soft_delete_model',),
        ),
        migrations.CreateModel(
            name='profiles_master',
            fields=[
                ('soft_delete_model_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='rms_ins.soft_delete_model')),
                ('profile_name', models.CharField(blank=True, max_length=255, null=True)),
                ('is_admin', models.IntegerField(default=0)),
                ('user_mobile_no', models.CharField(blank=True, max_length=100, null=True)),
                ('user_valid_from', models.DateField(default=datetime.date.today)),
                ('user_valid_upto', models.DateField(default=datetime.date.today)),
                ('user_remarks', models.TextField(blank=True, max_length=1000, null=True)),
                ('otp_enabled', models.IntegerField(default=0)),
                ('otp_verified', models.IntegerField(default=0)),
                ('otp_base32', models.CharField(max_length=255, null=True)),
                ('otp_auth_url', models.CharField(max_length=255, null=True)),
                ('is_mfa_needed', models.IntegerField(default=1)),
                ('is_location_auth_needed', models.IntegerField(default=1)),
                ('plant', models.ManyToManyField(to='rms_ins.entity_master')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            bases=('rms_ins.soft_delete_model',),
        ),
        migrations.CreateModel(
            name='sales_purchase_master',
            fields=[
                ('soft_delete_model_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='rms_ins.soft_delete_model')),
                ('bill_period_from', models.DateField(blank=True, null=True)),
                ('bill_period_to', models.DateField(blank=True, null=True)),
                ('invoice_number', models.CharField(blank=True, max_length=100, null=True)),
                ('invoice_dttm', models.DateTimeField(blank=True, null=True)),
                ('prefix', models.CharField(blank=True, max_length=100, null=True)),
                ('purchase_master_file', models.FileField(null=True, upload_to=rms_ins.models.user_directory_path, verbose_name='')),
                ('invoice_qty', models.FloatField(default=0)),
                ('cgst_amt', models.FloatField(default=0)),
                ('sgst_amt', models.FloatField(default=0)),
                ('igst_amt', models.FloatField(default=0)),
                ('gst_amt', models.FloatField(default=0)),
                ('tcs_perc', models.FloatField(default=0)),
                ('tcs_amt', models.FloatField(default=0)),
                ('taxable_amt', models.FloatField(default=0)),
                ('freight_charges', models.FloatField(default=0)),
                ('discount_per', models.FloatField(default=0)),
                ('discount_amt', models.FloatField(default=0)),
                ('gross_amt', models.FloatField(default=0)),
                ('round_off', models.FloatField(default=0)),
                ('qr_code', models.ImageField(blank=True, null=True, upload_to=rms_ins.models.user_directory_path)),
                ('taxable_pump', models.FloatField(default=0)),
                ('taxable_transport', models.FloatField(default=0)),
                ('user_remarks', models.TextField(blank=True, max_length=1000, null=True)),
                ('status', models.IntegerField(default=1)),
                ('entity_order_detail_id', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='rms_ins.entity_order_detail')),
            ],
            bases=('rms_ins.soft_delete_model',),
        ),
        migrations.CreateModel(
            name='user_tracking',
            fields=[
                ('soft_delete_model_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='rms_ins.soft_delete_model')),
                ('user_ip_addr', models.GenericIPAddressField(blank=True, null=True)),
                ('sl_no', models.CharField(blank=True, max_length=255, null=True)),
                ('content_type', models.CharField(blank=True, max_length=100, null=True)),
                ('object_id', models.CharField(blank=True, max_length=255, null=True)),
                ('action_done', models.CharField(blank=True, max_length=100, null=True)),
                ('tracking_dtm', models.DateTimeField(auto_now_add=True, null=True)),
                ('module_name', models.CharField(blank=True, max_length=250, null=True)),
                ('session_id', models.CharField(blank=True, max_length=50, null=True)),
                ('error_msg', models.TextField(blank=True, max_length=1000, null=True)),
                ('latitude', models.FloatField(default=0)),
                ('longitude', models.FloatField(default=0)),
                ('plant', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='rms_ins.entity_master')),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL)),
            ],
            bases=('rms_ins.soft_delete_model',),
        ),
    ]
